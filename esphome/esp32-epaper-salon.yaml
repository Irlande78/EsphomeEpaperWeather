#************************************************************************
#***** 16/01/2025 :                                                 ***** 
#***** Affichage sur epaper météo et infos divers                   *****       
#***** Nb : refresh partiel non pris en charge par HA =>            *****
#***** utilisation en monochrome car refresh global trop lent sinon *****
#************************************************************************
esphome:
  name: esp32-epaper-salon
  friendly_name: ESP32_EPaper_Salon
  on_boot:
  - delay: 0.2s
  - display.page.show: page2
  - script.execute: update_screen

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "34g0AK4LVa34Vqmzctmba95b58/TAuszx8zpw/zAIKk="

ota:
  - platform: esphome
    password: "7c071920c6fe1ec834d1833f0c0c8433"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: NONE
  # Optional manual IP
  #manual_ip:
  #  static_ip: 192.168.31.137
  #  gateway: 192.168.31.1
  #  subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "esp32-epaper-salon"
    password: "rJl4cqgLG0qX"

captive_portal:
time:
  - platform: homeassistant
    id: homeassistant_time

  - platform: sntp
    on_time:
      # Every 1 minutes
      - seconds: 0
        minutes: /1
        then:
          if:
            condition:
              switch.is_on: SW_ESP32_Epaper_Led_API_Connected_5s
            then:
            #- logger.log: "xxxWiFi is connected!xxx"
            - display.page.show: page1
            - script.execute: update_screen
            else:
              - display.page.show: page2
              - script.execute: update_screen
script:
  - id: update_screen
    then:
      - component.update: eink_display
spi:
  clk_pin: 13
  mosi_pin: 14
    
font:
#******************
#***** Textes ***** 
#******************
  - file: "epaper/GothamRnd-Bold.ttf"
    id: bold15
    size: 15
    glyphs: '*!"%()+,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdeéèêëfghijklmnopqrstuvwxyz/'
  - file: "epaper/GothamRnd-Bold.ttf"
    id: bold22
    size: 22
    #glyphs: '*!"%()+,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdeéèêëfghijklmnopqrstuvwxyz/'
    glyphs: [
      A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,
      a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,
      é,è,ê,ë,
      (,),+,-,_,.,°,/,
      "0","1","2","3","4","5","6","7","8","9",
      "\u0020", #space
      "\u0021", #!
      "\u0022", #"
      "\u0023", ##
      "\u0024", #$
      "\u0025", #%
      "\u0026", #&
      "\u0027", #'
      "\u002c", #,
      "\u003a", #:
      "\u003b", #:
      "\u003d", #=
      ]
  - file: "epaper/GothamRnd-Bold.ttf"
    id: bold35
    size: 35
    glyphs: '*!"%()+,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdeéèêëfghijklmnopqrstuvwxyz/'
  - file: "epaper/GothamRnd-Bold.ttf"
    id: bold55
    size: 55
    glyphs: '*!"%()+,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdeéèêëfghijklmnopqrstuvwxyz/'
  - file: "epaper/Arial.ttf"
    id: arial20
    size: 20
    glyphs: '*?!"%()+,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdeéèêëfghijklmnopqrstuvwxyz/³µ'
  - file: "epaper/Arial.ttf"
    id: arial22
    size: 22
    glyphs: '*?!"%()+,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdeéèêëfghijklmnopqrstuvwxyz/³µ'

#******************
#***** Icones ***** 
#******************
  - file: 'epaper/materialdesignicons-webfont.ttf'
    id: mdi100
    size: 100
    glyphs: &mdi-weather-glyphs
      - "\U000F0590" # mdi-weather-cloudy
      - "\U000F0F2F" # mdi-weather-cloudy-alert
      - "\U000F0E6E" # mdi-weather-cloudy-arrow-right
      - "\U000F0591" # mdi-weather-fog
      - "\U000F0592" # mdi-weather-hail
      - "\U000F0F30" # mdi-weather-hazy
      - "\U000F0898" # mdi-weather-hurricane
      - "\U000F0593" # mdi-weather-lightning
      - "\U000F067E" # mdi-weather-lightning-rainy
      - "\U000F0594" # mdi-weather-night
      - "\U000F0F31" # mdi-weather-night-partly-cloudy
      - "\U000F0595" # mdi-weather-partly-cloudy
      - "\U000F0F32" # mdi-weather-partly-lightning
      - "\U000F0F33" # mdi-weather-partly-rainy
      - "\U000F0F34" # mdi-weather-partly-snowy
      - "\U000F0F35" # mdi-weather-partly-snowy-rainy
      - "\U000F0596" # mdi-weather-pouring
      - "\U000F0597" # mdi-weather-rainy
      - "\U000F0598" # mdi-weather-snowy
      - "\U000F0F36" # mdi-weather-snowy-heavy
      - "\U000F067F" # mdi-weather-snowy-rainy
      - "\U000F0599" # mdi-weather-sunny
      - "\U000F0F37" # mdi-weather-sunny-alert
      - "\U000F14E4" # mdi-weather-sunny-off
      - "\U000F0F38" # mdi-weather-tornado
      - "\U000F059D" # mdi-weather-windy
      - "\U000F059E" # mdi-weather-windy-variant
      - "\U000F00E9" # mdi-cake
      - "\U000F0A70" # mdi-silverware-fork-knife
      - "\U000F1A74" # mdi-solar-power-variant-outline
      - "\U000F1904" # mdi-home-lightning-bolt-outline
      - "\U000F05C3" # mdi-youtube
      - "\U000F05D6" # mdi-alert-circle-outline
      - "\U000F0319" # lan-disconnect

  - file: 'epaper/materialdesignicons-webfont.ttf'
    id: Emo_mdi25
    size: 25
    glyphs: &mdi-weather-glyphs2
      - "\U000F1BEF" # cloud-clock-outline
  - file: 'epaper/materialdesignicons-webfont.ttf'
    id: Emo_mdi36
    size: 36
    glyphs: *mdi-weather-glyphs
  - file: 'epaper/materialdesignicons-webfont.ttf'
    id: Emo_mdi50
    size: 50
    glyphs: &mdi-weather-glyphs1
      - "\U000F069C" # mdi-emoticon-excited-outline :)
      - "\U000F1BE0" # mdi-cloud-alert-outline
      - "\U000F13EC" # mdi-Notification
      - "\U000F0596" # mdi-weather-pouring
      - "\U000F09C5" # mdi-arrow-up-right-bold-outline
      - "\U000F09B9" # mdi-arrow-down-right-bold-outline
      - "\U000F0E0A" # mdi-water-outline
      - "\U000F1503" # mdi-water-alert-outline
      - "\U000F01FC" # mdi-equal
      - "\U000F0F55" # home-thermometer-outline
      - "\U000F1904" # home-lightning-bolt-outline
      - "\U000F00F6" # calendar-today
      - "\U000F059A" # mdi-weather-sunset
      - "\U000F059B" # mdi-weather-sunset-down
      - "\U000F059C" # mdi-weather-sunset-up
      - "\U000F1A78" # weather-sunset-up
      - "\U000F0996" # progress-clock

sensor:
  #Diagnostic : puissance du signal wifi
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 2s
    entity_category: "diagnostic"
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""

  - platform: homeassistant
    name: "TemperatureEtage"
    entity_id: climate.floor_heating
    attribute: current_temperature
    id: TemperatureEtage

  - platform: homeassistant
    name: "TemperatureSalon"
    entity_id: sensor.temperature_salon_corrigee
    id: TemperatureSalon    
    
  - platform: homeassistant
    id: jour_tmin
    entity_id: sensor.ESP32EP_jour_tmin
  - platform: homeassistant
    entity_id: weather.carrieres_sous_poissy
    attribute: temperature
    id: weather_temperature

#********************************
#***** Probabilité de pluie ***** 
#********************************
  - platform: homeassistant
    entity_id: sensor.carrieres_sous_poissy_rain_chance
    id: weather_RainChance
    accuracy_decimals: 0

#********************************
#***** Probabilité de neige ***** 
#********************************
  - platform: homeassistant
    entity_id: sensor.carrieres_sous_poissy_snow_chance
    id: weather_SnowChance
    accuracy_decimals: 0

#*******************************
#***** Couverture nuageuse ***** 
#*******************************
  - platform: homeassistant
    entity_id: sensor.carrieres_sous_poissy_cloud_cover
    id: weather_CloudCoverPercent
    accuracy_decimals: 0

#***************************
#***** Taux d'humidité ***** 
#***************************
  - platform: homeassistant
    entity_id: weather.carrieres_sous_poissy
    attribute: humidity
    id: weather_humidity
    accuracy_decimals: 0

#***************************
#***** Vitesse du vent ***** 
#***************************
  - platform: homeassistant
    entity_id: weather.carrieres_sous_poissy
    attribute: wind_speed
    id: weather_wind_speed
    accuracy_decimals: 0

#******************************************************************************************
#***** Récupération des prochaines températures pour détecter la tendance + affichage *****       
#******************************************************************************************
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_0
    id: temp_heure_0
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_1
    id: temp_heure_1
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_2
    id: temp_heure_2
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_3
    id: temp_heure_3
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_4
    id: temp_heure_4
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_5
    id: temp_heure_5
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_6
    id: temp_heure_6
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_7
    id: temp_heure_7
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_8
    id: temp_heure_8
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_9
    id: temp_heure_9
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_10
    id: temp_heure_10
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_11
    id: temp_heure_11
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_12
    id: temp_heure_12
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_13
    id: temp_heure_13
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_14
    id: temp_heure_14
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_15
    id: temp_heure_15
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_16
    id: temp_heure_16
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_17
    id: temp_heure_17
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_18
    id: temp_heure_18
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_19
    id: temp_heure_19
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_20
    id: temp_heure_20
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_21
    id: temp_heure_21
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_22
    id: temp_heure_22
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_23
    id: temp_heure_23
  - platform: homeassistant
    entity_id: sensor.esp32ep_temp_heure_24
    id: temp_heure_24

#***********************************************************************************
#***** Récupération des prochaines heures pour affichage avec les températures *****       
#***********************************************************************************
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_1
    id: titre_heure_meteo_1
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_2
    id: titre_heure_meteo_2
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_3
    id: titre_heure_meteo_3
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_4
    id: titre_heure_meteo_4
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_5
    id: titre_heure_meteo_5        
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_6
    id: titre_heure_meteo_6
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_7
    id: titre_heure_meteo_7
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_8
    id: titre_heure_meteo_8
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_9
    id: titre_heure_meteo_9
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_10
    id: titre_heure_meteo_10     
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_11
    id: titre_heure_meteo_11
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_12
    id: titre_heure_meteo_12
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_13
    id: titre_heure_meteo_13
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_14
    id: titre_heure_meteo_14
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_15
    id: titre_heure_meteo_15        
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_16
    id: titre_heure_meteo_16
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_17
    id: titre_heure_meteo_17
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_18
    id: titre_heure_meteo_18
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_19
    id: titre_heure_meteo_19
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_20
    id: titre_heure_meteo_20     
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_21
    id: titre_heure_meteo_21
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_22
    id: titre_heure_meteo_22
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_23
    id: titre_heure_meteo_23
  - platform: homeassistant
    entity_id: sensor.ESP32EP_titre_heure_meteo_24
    id: titre_heure_meteo_24

#********************************************************************************
#***** Récupération de la température min pour tous les jours de la semaine *****       
#********************************************************************************
  - platform: homeassistant
    id: TempMin_jour_0
    entity_id: sensor.ESP32EP_TempMin_jour_0
  - platform: homeassistant
    id: TempMin_jour_1
    entity_id: sensor.ESP32EP_TempMin_jour_1
  - platform: homeassistant
    id: TempMin_jour_2
    entity_id: sensor.ESP32EP_TempMin_jour_2
  - platform: homeassistant
    id: TempMin_jour_3
    entity_id: sensor.ESP32EP_TempMin_jour_3
  - platform: homeassistant
    id: TempMin_jour_4
    entity_id: sensor.ESP32EP_TempMin_jour_4
  - platform: homeassistant
    id: TempMin_jour_5
    entity_id: sensor.ESP32EP_TempMin_jour_5

#*********************************************************************************
#***** Récupération de la température max  pour tous les jours de la semaine *****       
#*********************************************************************************
  - platform: homeassistant
    id: TempMax_jour_0
    entity_id: sensor.ESP32EP_TempMax_jour_0
  - platform: homeassistant
    id: TempMax_jour_1
    entity_id: sensor.ESP32EP_TempMax_jour_1
  - platform: homeassistant
    id: TempMax_jour_2
    entity_id: sensor.ESP32EP_TempMax_jour_2
  - platform: homeassistant
    id: TempMax_jour_3
    entity_id: sensor.ESP32EP_TempMax_jour_3
  - platform: homeassistant
    id: TempMax_jour_4
    entity_id: sensor.ESP32EP_TempMax_jour_4
  - platform: homeassistant
    id: TempMax_jour_5
    entity_id: sensor.ESP32EP_TempMax_jour_5

text_sensor: 
#*************************************
#***** Prochain couché de soleil ***** 
#*************************************
  - platform: homeassistant
    name: "Prochain_couche_de_soleil"
    entity_id: sensor.ESP32EP_nextset
    id: sun_next_setting
#***********************************
#***** Prochain levé de soleil ***** 
#***********************************
  - platform: homeassistant
    name: "Prochain_leve_de_soleil"
    entity_id: sensor.ESP32EP_nextsunrise
    id: sun_next_sunrise

#**************************************************
#***** RTE Jours rouges blancs bleus restants ***** 
#**************************************************
  - platform: homeassistant
    name: "Nb_jours_Restants_Rouge"
    entity_id: sensor.rte_tempo_cycle_jours_restants_rouge
    id: rte_tempo_cycle_jours_restants_rouge
  - platform: homeassistant
    name: "Nb_jours_Restants_blanc"
    entity_id: sensor.rte_tempo_cycle_jours_restants_blanc
    id: rte_tempo_cycle_jours_restants_blanc
  - platform: homeassistant
    name: "Nb_jours_Restants_bleu"
    entity_id: sensor.rte_tempo_cycle_jours_restants_bleu
    id: rte_tempo_cycle_jours_restants_bleu

#*********************************************
#***** RTE couleur actuelle et prochaine ***** 
#*********************************************
  - platform: homeassistant
    entity_id: sensor.rte_tempo_couleur_actuelle
    id: rte_tempo_couleur_actuelle
  - platform: homeassistant
    entity_id: sensor.rte_tempo_prochaine_couleur
    id: rte_tempo_prochaine_couleur
  
#************************************
#***** Conditions météo du jour ***** 
#************************************
  - platform: homeassistant
    entity_id: sensor.carrieres_sous_poissy_daily_original_condition
    id: weather_DayCondition

#******************************************************
#*****  Prévions de la prochaine pluie en minutes ***** 
#******************************************************
#  - platform: homeassistant
#    entity_id: sensor.ESP32EP_Pluie_proch
#    id: Pluie_proch
  - platform: homeassistant
    name: "NextRain"
    entity_id: sensor.carrieres_sous_poissy_next_rain
    id: Pluie
    attribute: 1_hour_forecast
    filters:
      - to_lower:
      - substitute:
        - "' ->"
        - "{ ->"
        - "} ->"
        - "min: -> min :"
        - ", 5 -> ,5"
        - ", 10 -> ,10"
        - ", 15 -> ,15"
        - ", 20 -> ,20"
        - ", 25 -> ,25"
        - ", 35 -> ,35"
        - ", 45 -> ,45"
        - ", 55 -> ,55"

  #Traduction de la date du jour en français
  - platform: homeassistant
    id: date_complete
    entity_id: sensor.date_complete

  - platform: homeassistant
    entity_id: weather.carrieres_sous_poissy
    id: weather_name

#**********************************************************************
#***** Récupération de la météo pour tous les jours de la semaine *****       
#**********************************************************************
  - platform: homeassistant
    entity_id: sensor.ESP32EP_Meteo_jour_0
    id: Meteo_jour_0
  - platform: homeassistant
    entity_id: sensor.ESP32EP_Meteo_jour_1
    id: Meteo_jour_1
  - platform: homeassistant
    entity_id: sensor.ESP32EP_Meteo_jour_2
    id: Meteo_jour_2
  - platform: homeassistant
    entity_id: sensor.ESP32EP_Meteo_jour_3
    id: Meteo_jour_3
  - platform: homeassistant
    entity_id: sensor.ESP32EP_Meteo_jour_4
    id: Meteo_jour_4
  - platform: homeassistant
    entity_id: sensor.ESP32EP_Meteo_jour_5
    id: Meteo_jour_5

#************************************************
#***** Récupération des jours de la semaine *****       
#************************************************
  - platform: homeassistant
    id: titre_jour_0
    entity_id: sensor.ESP32EP_titre_jour_0
  - platform: homeassistant
    id: titre_jour_1
    entity_id: sensor.ESP32EP_titre_jour_1
  - platform: homeassistant
    id: titre_jour_2
    entity_id: sensor.ESP32EP_titre_jour_2
  - platform: homeassistant
    id: titre_jour_3
    entity_id: sensor.ESP32EP_titre_jour_3
  - platform: homeassistant
    id: titre_jour_4
    entity_id: sensor.ESP32EP_titre_jour_4
  - platform: homeassistant
    id: titre_jour_5
    entity_id: sensor.ESP32EP_titre_jour_5

#************************************
#***** Récupération des alertes *****       
#************************************
  - platform: homeassistant
    id: alert_grand_froid
    entity_id:  sensor.ESP32EP_alert_grand_froid
    filters:
      - to_lower:
  - platform: homeassistant
    id: alert_inondation
    entity_id:  sensor.ESP32EP_alert_inondation
    filters:
      - to_lower:
  - platform: homeassistant
    id: alert_neige_verglas
    entity_id:  sensor.ESP32EP_alert_neige_verglas
    filters:
      - to_lower:
  - platform: homeassistant
    id: alert_orages
    entity_id:  sensor.ESP32EP_alert_orages
    filters:
      - to_lower:
  - platform: homeassistant
    id: alert_pluie_inondation
    entity_id:  sensor.ESP32EP_alert_pluie_inondation
    filters:
      - to_lower:
  - platform: homeassistant
    id: alert_vent
    entity_id:  sensor.ESP32EP_alert_vent
    filters:
      - to_lower:
  
#*******************************************
#***** Allumage led lors API connectée *****       
#*******************************************
switch:
  - platform: gpio
    name: "SW_ESP32_Epaper_Led_API_Connected_5s"
    pin: 02
    id: SW_ESP32_Epaper_Led_API_Connected_5s
    restore_mode : ALWAYS_OFF 

#******************************************
#***** Pour faire un reset à distance *****       
#******************************************
button:
  - platform: restart
    name: "ESP32_Epaper_Restart"

color:
  - id: color_w
    red: 100%
    green: 100%
    blue: 100%
    white: 0%
  - id: color_b
    red: 0%
    green: 0%
    blue: 0%
    white: 50%
  - id: color_r
    red: 100%
    green: 0%
    blue: 0%
    white: 0%

display:
  - platform: waveshare_epaper
    id: eink_display
    cs_pin: 15
    dc_pin: 27
    busy_pin: 25
    #busy_pin:
    #  number: GPIO25
    #  inverted: true
    reset_pin: 26
    reset_duration: 2ms
    #Utiliser en cas de bug d'affichage (plusieurs heures) et retirer après !
    #model: 7.50in-bv3-bwr # Tricolor mais refresh très lent !

    #model: 7.50in-bc

    #Utiliser celui-ci
    model: 7.50in-bV3 # Monochrome mais refresh plus rapide

    #model: 7.50inV2
    #model: 7.50inV2alt
    rotation: 0°
    update_interval: never
    pages:
      - id: page1
        lambda: |
          //**************************************
          //***** Correspondance météo/icone *****       
          //**************************************
          std::map<std::string, std::string> weather_icon_map
              {
                {"cloudy", "\U000F0590"},
                {"cloudy-alert", "\U000F0F2F"},
                {"cloudy-arrow-right", "\U000F0E6E"},
                {"fog", "\U000F0591"},
                {"hail", "\U000F0592"},
                {"hazy", "\U000F0F30"},
                {"hurricane", "\U000F0898"},
                {"lightning", "\U000F0593"},
                {"lightning-rainy", "\U000F067E"},
                {"night", "\U000F0594"},
                {"night-partly-cloudy", "\U000F0F31"},
                {"partlycloudy", "\U000F0595"},
                {"partly-lightning", "\U000F0F32"},
                {"partly-rainy", "\U000F0F33"},
                {"partly-snowy", "\U000F0F34"},
                {"partly-snowy-rainy", "\U000F0F35"},
                {"pouring", "\U000F0596"},
                {"rainy", "\U000F0597"},
                {"snowy", "\U000F0598"},
                {"snowy-heavy", "\U000F0F36"},
                {"snowy-rainy", "\U000F067F"},
                {"sunny", "\U000F0599"},
                {"sunny-alert", "\U000F0F37"},
                {"sunny-off", "\U000F14E4"},
                {"sunset", "\U000F059A"},
                {"sunset-down", "\U000F059B"},
                {"sunset-up", "\U000F059C"},
                {"tornado", "\U000F0F38"},
                {"windy", "\U000F059D"},
                {"windy-variant", "\U000F059E"},
                {"clear-night", "\U000F0594"},
              };

          std::map<std::string, std::string> weather_traduction
              {
                {"cloudy", "Nuageux"},
                {"cloudy-alert", "Alerte"},
                {"cloudy-arrow-right", "--"},
                {"fog", "Brouillard"},
                {"hail", "Grêle"},
                {"hazy", "Brume"},
                {"hurricane", "Ouragan"},
                {"lightning", "Orage"},
                {"lightning-rainy", "Orageux"},
                {"night", "Nuit"},
                {"clear-night", "Nuit claire"},
                {"night-partly-cloudy", "Nuageux"},
                {"partlycloudy", "Nuageux"},
                {"partly-lightning", "Orageux"},
                {"partly-rainy", "Pluvieux"},
                {"partly-snowy", "Neigeux"},
                {"partly-snowy-rainy", "Neigeux"},
                {"pouring", "À verse"},
                {"rainy", "Pluvieux"},
                {"snowy", "Neigeux"},
                {"snowy-heavy", "Neigeux"},
                {"snowy-rainy", "Neigeux"},
                {"sunny", "Ensoleillé"},
                {"sunny-alert", "Alerte"},
                {"sunny-off", "--"},
                {"sunset", "Crépuscule"},
                {"sunset-down", "Crépuscule"},
                {"sunset-up", "Aube"},
                {"tornado", "Tornade"},
                {"windy", "Venteux"},
                {"windy-variant", "Venteux"},
                {"clear-night", "Nuit claire"},
              };

              int HauteurAffichage_meteo_jour = 50;
              int Largeur_Affichage_meteo_jour = 380;
              int OffsetLargeur_meteo_jour = 150;
              int OffsetHauteur_meteo_jour = -70;

              //********************************
              //***** Affichage de la date *****       
              //********************************
              it.printf(it.get_width()/4 +65, HauteurAffichage_meteo_jour +25 +OffsetHauteur_meteo_jour, id(bold35), TextAlign::TOP_CENTER, "%s", id(date_complete).state.c_str());
              //it.printf(it.get_width()/4 +65, HauteurAffichage_meteo_jour +25 +OffsetHauteur_meteo_jour, id(bold35), TextAlign::TOP_CENTER, "%s", "Dimanche 31 décembre 2024"); //Pour test longuere max chaine de caractères

              //***********************************************
              //***** Affichage de l'heure et icone météo *****       
              //***********************************************
              it.strftime(Largeur_Affichage_meteo_jour +150 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +25 +OffsetHauteur_meteo_jour, id(bold35), TextAlign::TOP_CENTER, "   %H:%M", id(homeassistant_time).now());
              it.printf(Largeur_Affichage_meteo_jour -35 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +60 +OffsetHauteur_meteo_jour, id(mdi100), TextAlign::TOP_CENTER, "%s", weather_icon_map[id(weather_name).state].c_str());
                            
              //******************************************************************************************************
              //***** Pourcentage de couverture nuageuse, risque de neige et vitesse du vent ajouté dans l'icone *****       
              //******************************************************************************************************
              if (id(weather_name).state=="cloudy"){it.printf(Largeur_Affichage_meteo_jour -15 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +110 +OffsetHauteur_meteo_jour, id(bold22), TextAlign::TOP_RIGHT, "%.0f%%",id(weather_CloudCoverPercent).state);}
              if (strstr(id(weather_name).state.c_str(),"cloudy-") != NULL){it.printf(Largeur_Affichage_meteo_jour -15 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +110 +OffsetHauteur_meteo_jour, id(bold22), TextAlign::TOP_RIGHT, "%.0f%%",id(weather_CloudCoverPercent).state);}
              if (id(weather_name).state=="snowy"){it.printf(Largeur_Affichage_meteo_jour -15 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +95 +OffsetHauteur_meteo_jour, id(bold22), TextAlign::TOP_RIGHT, "%.0f%%",id(weather_SnowChance).state);}
              if (id(weather_name).state=="snowy-heavy"){it.printf(Largeur_Affichage_meteo_jour -15 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +87 +OffsetHauteur_meteo_jour, id(bold22), TextAlign::TOP_RIGHT, "%.0f%%",id(weather_SnowChance).state);}
              if (id(weather_name).state=="snowy-rainy"){it.printf(Largeur_Affichage_meteo_jour -15 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +90 +OffsetHauteur_meteo_jour, id(bold22), TextAlign::TOP_RIGHT, "%.0f%%",id(weather_SnowChance).state);}
              if (id(weather_name).state=="partly-snowy"){it.printf(Largeur_Affichage_meteo_jour -15 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +115 +OffsetHauteur_meteo_jour, id(bold22), TextAlign::TOP_RIGHT, "%.0f%%",id(weather_SnowChance).state);}
              if (id(weather_name).state=="partly-snowy-rainy"){it.printf(Largeur_Affichage_meteo_jour -15 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +115 +OffsetHauteur_meteo_jour, id(bold22), TextAlign::TOP_RIGHT, "%.0f%%",id(weather_SnowChance).state);}
              if (strstr(id(weather_name).state.c_str(),"wind") != NULL){it.printf(Largeur_Affichage_meteo_jour -25 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +138 +OffsetHauteur_meteo_jour, id(bold15), TextAlign::TOP_RIGHT, "%.0fkm/h",id(weather_wind_speed).state);}
              
              //***************************************
              //***** Météo des prochaines heures *****       
              //***************************************    
              int HauteurAffichage_MeteoHeures = HauteurAffichage_meteo_jour + OffsetHauteur_meteo_jour + 177;
              int LargeurAffichage_MeteoHeures = Largeur_Affichage_meteo_jour + OffsetLargeur_meteo_jour;

              it.printf(LargeurAffichage_MeteoHeures -75, HauteurAffichage_MeteoHeures-22, id(Emo_mdi25), TextAlign::TOP_RIGHT, "%s","\U000F1BEF" ); //Affichage de l'icone nuage clock
              
              it.printf(LargeurAffichage_MeteoHeures -45, HauteurAffichage_MeteoHeures, id(arial20), TextAlign::TOP_RIGHT, "%.0fh ", id(titre_heure_meteo_2).state);
              it.printf(LargeurAffichage_MeteoHeures +20, HauteurAffichage_MeteoHeures, id(arial20), TextAlign::TOP_RIGHT, "%2.1f°C", id(temp_heure_1).state); 

              it.printf(LargeurAffichage_MeteoHeures -45, HauteurAffichage_MeteoHeures +20, id(arial20), TextAlign::TOP_RIGHT, "%.0fh ", id(titre_heure_meteo_3).state);
              it.printf(LargeurAffichage_MeteoHeures +20, HauteurAffichage_MeteoHeures +20, id(arial20), TextAlign::TOP_RIGHT, "%2.1f°C", id(temp_heure_2).state); 

              it.printf(LargeurAffichage_MeteoHeures -45, HauteurAffichage_MeteoHeures +40, id(arial20), TextAlign::TOP_RIGHT, "%.0fh ", id(titre_heure_meteo_4).state);
              it.printf(LargeurAffichage_MeteoHeures +20, HauteurAffichage_MeteoHeures +40, id(arial20), TextAlign::TOP_RIGHT, "%2.1f°C", id(temp_heure_3).state); 

              it.printf(LargeurAffichage_MeteoHeures -45, HauteurAffichage_MeteoHeures +60, id(arial20), TextAlign::TOP_RIGHT, "%.0fh ", id(titre_heure_meteo_6).state);
              it.printf(LargeurAffichage_MeteoHeures +20, HauteurAffichage_MeteoHeures +60, id(arial20), TextAlign::TOP_RIGHT, "%2.1f°C", id(temp_heure_5).state); 

              it.printf(LargeurAffichage_MeteoHeures -45, HauteurAffichage_MeteoHeures +80, id(arial20), TextAlign::TOP_RIGHT, "%.0fh ", id(titre_heure_meteo_8).state);
              it.printf(LargeurAffichage_MeteoHeures +20, HauteurAffichage_MeteoHeures +80, id(arial20), TextAlign::TOP_RIGHT, "%2.1f°C", id(temp_heure_7).state); 

              it.printf(LargeurAffichage_MeteoHeures -45, HauteurAffichage_MeteoHeures +100, id(arial20), TextAlign::TOP_RIGHT, "%.0fh ", id(titre_heure_meteo_10).state);
              it.printf(LargeurAffichage_MeteoHeures +20, HauteurAffichage_MeteoHeures +100, id(arial20), TextAlign::TOP_RIGHT, "%2.1f°C", id(temp_heure_9).state); 

              it.printf(LargeurAffichage_MeteoHeures -45, HauteurAffichage_MeteoHeures +120, id(arial20), TextAlign::TOP_RIGHT, "%.0fh ", id(titre_heure_meteo_15).state);
              it.printf(LargeurAffichage_MeteoHeures +20, HauteurAffichage_MeteoHeures +120, id(arial20), TextAlign::TOP_RIGHT, "%2.1f°C", id(temp_heure_14).state); 

              it.printf(LargeurAffichage_MeteoHeures -45, HauteurAffichage_MeteoHeures +140, id(arial20), TextAlign::TOP_RIGHT, "%.0fh ", id(titre_heure_meteo_17).state);
              it.printf(LargeurAffichage_MeteoHeures +20, HauteurAffichage_MeteoHeures +140, id(arial20), TextAlign::TOP_RIGHT, "%2.1f°C", id(temp_heure_16).state); 

              it.printf(LargeurAffichage_MeteoHeures -45, HauteurAffichage_MeteoHeures +160, id(arial20), TextAlign::TOP_RIGHT, "%.0fh ", id(titre_heure_meteo_19).state);
              it.printf(LargeurAffichage_MeteoHeures +20, HauteurAffichage_MeteoHeures +160, id(arial20), TextAlign::TOP_RIGHT, "%2.1f°C", id(temp_heure_18).state); 
              
              //Dessin du rectangle
              it.line(LargeurAffichage_MeteoHeures -90, HauteurAffichage_MeteoHeures+5, LargeurAffichage_MeteoHeures -90, HauteurAffichage_MeteoHeures+185); //Partie gauche du rectangle
              it.line(LargeurAffichage_MeteoHeures -90 +120, HauteurAffichage_MeteoHeures-5, LargeurAffichage_MeteoHeures -90 +120, HauteurAffichage_MeteoHeures+185); //Partie droite du rectangle
              it.line(LargeurAffichage_MeteoHeures -90 +120, HauteurAffichage_MeteoHeures-5, LargeurAffichage_MeteoHeures -90 +20, HauteurAffichage_MeteoHeures-5); //Partie haute du rectangle
              it.line(LargeurAffichage_MeteoHeures -90 +120, HauteurAffichage_MeteoHeures+185, LargeurAffichage_MeteoHeures -90, HauteurAffichage_MeteoHeures+185); //Partie basse du rectangle

              //********************
              //***** Humidité *****       
              //********************          
              if (id(weather_humidity).state >= 70){it.printf(Largeur_Affichage_meteo_jour +45 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +20 +OffsetHauteur_meteo_jour, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F1503" );}
              else {it.printf(Largeur_Affichage_meteo_jour +45 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +20 +OffsetHauteur_meteo_jour, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F0E0A" );}
              it.printf(Largeur_Affichage_meteo_jour +70 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +62 +OffsetHauteur_meteo_jour, id(bold22), TextAlign::TOP_RIGHT, "%.0f%%",id(weather_humidity).state);

              //*************************************
              //***** Météo chaine de caractère *****       
              //*************************************
              it.printf(Largeur_Affichage_meteo_jour +170 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +55 +OffsetHauteur_meteo_jour, id(bold35), TextAlign::TOP_CENTER, "%s", weather_traduction[id(weather_name).state].c_str());
              
              //**********************************************************
              //***** Info météo, conditions particulières du moment *****       
              //**********************************************************
              if (strlen(id(weather_DayCondition).state.c_str()) != 0){it.printf(Largeur_Affichage_meteo_jour +160 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +90 +OffsetHauteur_meteo_jour, id(bold22), TextAlign::TOP_CENTER,"%s",id(weather_DayCondition).state.c_str());}

              //***************************************
              //***** Affichage de la température *****       
              //***************************************
              it.printf(Largeur_Affichage_meteo_jour +170 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +115 +OffsetHauteur_meteo_jour, id(bold55), color_r, TextAlign::TOP_CENTER, "%2.1f°C", id(weather_temperature).state);

              //******************************
              //***** Info divers maison *****       
              //******************************
              it.printf(Largeur_Affichage_meteo_jour +95 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +180 +OffsetHauteur_meteo_jour, id(Emo_mdi50), TextAlign::TOP_RIGHT, "%s","\U000F0F55" ); //Icone maison-température
              it.printf(Largeur_Affichage_meteo_jour +245 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +180 +OffsetHauteur_meteo_jour, id(arial20), TextAlign::TOP_RIGHT, "Salon : %2.1f°C", id(TemperatureSalon).state); //Tempérture salon corrigée
              it.printf(Largeur_Affichage_meteo_jour +245 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +200 +OffsetHauteur_meteo_jour, id(arial20), TextAlign::TOP_RIGHT, "Etage : %2.1f°C", id(TemperatureEtage).state); //Température étage

              //***************************
              //***** Info divers RTE *****       
              //***************************
              // Couleurs du jour et du lendemain
              it.printf(Largeur_Affichage_meteo_jour +95 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +240 +OffsetHauteur_meteo_jour, id(Emo_mdi50), TextAlign::TOP_RIGHT, "%s","\U000F1904" ); //Icone maison-electricité
              if (strlen(id(rte_tempo_couleur_actuelle).state.c_str()) != 0){it.printf(Largeur_Affichage_meteo_jour +250 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +240 +OffsetHauteur_meteo_jour, id(arial20), TextAlign::TOP_RIGHT,"Actuelle : %s",id(rte_tempo_couleur_actuelle).state.c_str());}
              // On affiche la prochaine couleur que si elle est connue et pas "unavailable"
              if (strlen(id(rte_tempo_prochaine_couleur).state.c_str()) != 0 and strlen(id(rte_tempo_prochaine_couleur).state.c_str()) <= 5)
              {it.printf(Largeur_Affichage_meteo_jour +250 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +260 +OffsetHauteur_meteo_jour, id(arial20), TextAlign::TOP_RIGHT,"Prochaine : %s",id(rte_tempo_prochaine_couleur).state.c_str());}
              else {it.printf(Largeur_Affichage_meteo_jour +250 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +260 +OffsetHauteur_meteo_jour, id(arial20), TextAlign::TOP_RIGHT,"Prochaine : ?");}
              // Jours restants par couleurs
              it.printf(Largeur_Affichage_meteo_jour +95 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +310 +OffsetHauteur_meteo_jour, id(Emo_mdi50), TextAlign::TOP_RIGHT, "%s","\U000F00F6" ); //Icone calendrier
              it.printf(Largeur_Affichage_meteo_jour +225 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +300 +OffsetHauteur_meteo_jour, id(arial20), TextAlign::TOP_RIGHT,"bleus : %s",id(rte_tempo_cycle_jours_restants_bleu).state.c_str());
              it.printf(Largeur_Affichage_meteo_jour +225 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +320 +OffsetHauteur_meteo_jour, id(arial20), TextAlign::TOP_RIGHT,"blancs : %s",id(rte_tempo_cycle_jours_restants_blanc).state.c_str());
              it.printf(Largeur_Affichage_meteo_jour +225 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +340 +OffsetHauteur_meteo_jour, id(arial20), TextAlign::TOP_RIGHT,"Rouges : %s",id(rte_tempo_cycle_jours_restants_rouge).state.c_str());

              //**************************************
              //***** Tendance de la température *****       
              //**************************************
              //***** On regarde entre h0 et h+2 pour éviter d'obtenir une température stable et détecter la tendance *****
              if (id(temp_heure_2).state > id(temp_heure_0).state){it.printf(Largeur_Affichage_meteo_jour +45 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +115 +OffsetHauteur_meteo_jour, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F09C5" );} //La température augmente
              else
              if (id(temp_heure_2).state < id(temp_heure_0).state){it.printf(Largeur_Affichage_meteo_jour +45 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +115 +OffsetHauteur_meteo_jour, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F09B9" );} //La température diminue
              else
              if (id(temp_heure_2).state == id(temp_heure_0).state){it.printf(Largeur_Affichage_meteo_jour +45 +OffsetLargeur_meteo_jour, HauteurAffichage_meteo_jour +115 +OffsetHauteur_meteo_jour, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F01FC" );} //La température est stable
          
              //******************************************************
              //***** infos pluie en minutes si différent de "0" *****       
              //******************************************************              
              int HauteurAffichage_Alertes_Pluie = 60;
              it.printf(it.get_width()/4 +35, HauteurAffichage_Alertes_Pluie, id(bold22), TextAlign::TOP_CENTER, "Informations météo" );
              char *strCopy = strdup( id(Pluie).state.c_str() );
              char delim[] = ",";
              char *prochain;
              prochain = strtok(strCopy, delim);
              int y = HauteurAffichage_Alertes_Pluie +25;
              it.printf(it.get_width()/4 +35, y, id(arial20), TextAlign::TOP_CENTER, "Probabilité de pluie %.0f%%",id(weather_RainChance).state );
              y +=20;

              bool pluieTrouvee = false;
              while ( prochain != NULL ) 
                {
                if (strstr(prochain, "pluie") != NULL) 
                  {
                  // On affich pas tout pour des raisons de taille d'écran !
                  if (strstr(prochain,"15")==NULL and strstr(prochain,"25")==NULL and strstr(prochain,"45")==NULL){it.printf(it.get_width()/6 -40, y , id(arial20), TextAlign::TOP_LEFT,"%s",prochain); y += 20;}
                  pluieTrouvee = true;
                  }
                prochain = strtok(NULL, delim);
                }

              if (!pluieTrouvee) //la pluie n'a pas été détectée
                {
                it.printf(it.get_width()/4 +30, y , id(arial20), TextAlign::TOP_CENTER, "Au moins une heure sans pluie");
                it.printf(it.get_width()/2 -10, y-22, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F069C" ); //:)
                it.rectangle(it.get_width()/6-80, HauteurAffichage_Alertes_Pluie+22, it.get_width()/2 -35, y-HauteurAffichage_Alertes_Pluie+6);
                it.printf(it.get_width()/6-110,(y-HauteurAffichage_Alertes_Pluie)/2+HauteurAffichage_Alertes_Pluie, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F0596" ); //weather-pouring
                y += 20;
                y += 20;
                }
              else
                {
                it.rectangle(it.get_width() / 6-80, HauteurAffichage_Alertes_Pluie+22, it.get_width()/2 -35, y-HauteurAffichage_Alertes_Pluie-14);
                it.printf(it.get_width()/6-110,(y-HauteurAffichage_Alertes_Pluie)/2+HauteurAffichage_Alertes_Pluie -20, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F0596" ); //weather-pouring
                 }
              y += 17; //Occupation écran

              //*************************
              //***** Alertes météo *****       
              //*************************
              int HauteurAffichage_5j = 360;
              int HauteurAffichage_Alertes = y;
              bool alerteTrouvee = false;
              it.printf(it.get_width()/4 +35, HauteurAffichage_Alertes, id(bold22), TextAlign::TOP_CENTER, "Alertes météo");
              y+=25;
              if (id(alert_grand_froid).state != "unknown") //traitement disparition de "grand froid" le 01/01/2025 (poisson ???)
                {
                if (id(alert_grand_froid).state != "vert"){it.printf(it.get_width()/4+35, y , id(arial20), TextAlign::TOP_CENTER,"Alerte grand froid : %s", id(alert_grand_froid).state.c_str()); y+=20; alerteTrouvee=true;}
                }
              if (id(alert_inondation).state != "vert"){it.printf(it.get_width()/4+35, y , id(arial20), TextAlign::TOP_CENTER,"Alerte inondation : %s", id(alert_inondation).state.c_str()); y+=20; alerteTrouvee=true;}
              if (id(alert_neige_verglas).state != "vert"){it.printf(it.get_width()/4+35, y , id(arial20), TextAlign::TOP_CENTER,"Alerte neige-verglas : %s", id(alert_neige_verglas).state.c_str()); y+=20 ;alerteTrouvee=true;}
              if (id(alert_orages).state != "vert"){it.printf(it.get_width()/4+35, y , id(arial20), TextAlign::TOP_CENTER,"Alerte orages : %s", id(alert_orages).state.c_str()); y+=20; alerteTrouvee=true;}
              if (id(alert_pluie_inondation).state != "vert"){it.printf(it.get_width()/4+35, y , id(arial20), TextAlign::TOP_CENTER,"Alerte pluie-inondation : %s", id(alert_pluie_inondation).state.c_str()); y+=20; alerteTrouvee=true;}
              if (id(alert_vent).state != "vert"){it.printf(it.get_width()/4+35, y , id(arial20), TextAlign::TOP_CENTER,"Alerte vent : %s", id(alert_vent).state.c_str()); y+=20; alerteTrouvee=true;}
              if (!alerteTrouvee)
                {
                it.printf(it.get_width()/4 +35, y, id(arial20), TextAlign::TOP_CENTER,"Aucune alerte actuellement");
                y+=20 ;
                it.printf(it.get_width()/4 +35, y, id(arial20), TextAlign::TOP_CENTER,"Tout va bien !" );
                it.printf(it.get_width()/2 -10, y-27, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F13EC");
                y+=20 ;
                }
              it.rectangle(it.get_width() / 6-80, HauteurAffichage_Alertes+22, it.get_width()/2 -35, y-HauteurAffichage_Alertes-14);
              it.printf(it.get_width()/6-110,(y-HauteurAffichage_Alertes-20)/2+HauteurAffichage_Alertes, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F1BE0" ); //cloud-alert-outline
              
              //************************************************************************
              //***** Meilleure occupaction de l'écran si pas d'alerte et de pluie *****       
              //************************************************************************
              if (!alerteTrouvee and !pluieTrouvee)
                {
                y+=17 ;
                }

              //**************************************
              //***** Lever et coucher de soleil *****       
              //**************************************
              if (y<=265)
                {
                y+= 20 ; 
                int HauteurAffichage_LeverCoucherSoleil=y;
                it.printf(it.get_width()/4 +35, HauteurAffichage_LeverCoucherSoleil, id(bold22), TextAlign::TOP_CENTER, "Lever et coucher de soleil");
                y+=25 ;
                it.printf(it.get_width()/8+30,y, id(Emo_mdi50), TextAlign::TOP_RIGHT, "%s","\U000F059C"); //Lever de soleil
                it.printf(it.get_width()/4-40, y+15, id(bold22), TextAlign::TOP_CENTER,"%s",id(sun_next_sunrise).state.c_str());
                it.printf(3*it.get_width()/6,y, id(Emo_mdi50), TextAlign::TOP_RIGHT, "%s","\U000F059A"); //Coucher de soleil
                it.printf(it.get_width()/4+110, y+15, id(bold22), TextAlign::TOP_CENTER,"%s",id(sun_next_setting).state.c_str());
                y+=45 ;
                it.rectangle(it.get_width() / 6-80, HauteurAffichage_LeverCoucherSoleil+22, it.get_width()/2 -35, y-HauteurAffichage_LeverCoucherSoleil-14);
                it.printf(it.get_width()/6-110,(y-HauteurAffichage_LeverCoucherSoleil-20)/2+HauteurAffichage_LeverCoucherSoleil, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F1A78" );
                it.printf(it.get_width()/4+30,(y-HauteurAffichage_LeverCoucherSoleil-20)/2+HauteurAffichage_LeverCoucherSoleil, id(Emo_mdi50), TextAlign::TOP_CENTER, "%s","\U000F0996" ); //Logo horloge
                }
            
              //********************
              //***** Météo 5j *****       
              //********************
              it.printf((it.get_width() / 6) - 55, HauteurAffichage_5j, id(bold22),  TextAlign::TOP_CENTER, "%s", id(titre_jour_0).state.c_str());
              it.printf((it.get_width() / 6) - 55, HauteurAffichage_5j +15, id(Emo_mdi36), TextAlign::TOP_CENTER, "%s", weather_icon_map[id(Meteo_jour_0).state].c_str());
              it.printf((it.get_width() / 6) - 55, HauteurAffichage_5j +50, id(bold22), TextAlign::TOP_CENTER, "%s", weather_traduction[id(Meteo_jour_0).state].c_str());
              it.printf((it.get_width() / 6) - 55, HauteurAffichage_5j +72, id(bold22), TextAlign::TOP_CENTER, "%2.1f°C", id(TempMax_jour_0).state);
              it.printf((it.get_width() / 6) - 55, HauteurAffichage_5j +93, id(arial22), TextAlign::TOP_CENTER, "%2.1f°C", id(TempMin_jour_0).state);      

              it.printf((it.get_width() / 6)*2 - 27, HauteurAffichage_5j, id(bold22),  TextAlign::TOP_CENTER, "%s", id(titre_jour_1).state.c_str());
              it.printf((it.get_width() / 6)*2 - 27, HauteurAffichage_5j +15, id(Emo_mdi36), TextAlign::TOP_CENTER, "%s", weather_icon_map[id(Meteo_jour_1).state].c_str());
              it.printf((it.get_width() / 6)*2 - 27, HauteurAffichage_5j +50, id(bold22), TextAlign::TOP_CENTER, "%s", weather_traduction[id(Meteo_jour_1).state].c_str());
              it.printf((it.get_width() / 6)*2 - 27, HauteurAffichage_5j +72, id(bold22), TextAlign::TOP_CENTER, "%2.1f°C", id(TempMax_jour_1).state);
              it.printf((it.get_width() / 6)*2 - 27, HauteurAffichage_5j +93, id(arial22), TextAlign::TOP_CENTER, "%2.1f°C", id(TempMin_jour_1).state);  

              it.printf((it.get_width() / 6)*3 + 0, HauteurAffichage_5j, id(bold22),  TextAlign::TOP_CENTER, "%s", id(titre_jour_2).state.c_str());
              it.printf((it.get_width() / 6)*3 + 0, HauteurAffichage_5j +15, id(Emo_mdi36), TextAlign::TOP_CENTER, "%s", weather_icon_map[id(Meteo_jour_2).state].c_str());
              it.printf((it.get_width() / 6)*3 + 0, HauteurAffichage_5j +50, id(bold22), TextAlign::TOP_CENTER, "%s", weather_traduction[id(Meteo_jour_2).state].c_str());
              it.printf((it.get_width() / 6)*3 + 0, HauteurAffichage_5j +72, id(bold22), TextAlign::TOP_CENTER, "%2.1f°C", id(TempMax_jour_2).state);
              it.printf((it.get_width() / 6)*3 + 0, HauteurAffichage_5j +93, id(arial22), TextAlign::TOP_CENTER, "%2.1f°C", id(TempMin_jour_2).state); 

              it.printf((it.get_width() / 6)*4 + 27, HauteurAffichage_5j, id(bold22),  TextAlign::TOP_CENTER, "%s", id(titre_jour_3).state.c_str());
              it.printf((it.get_width() / 6)*4 + 27, HauteurAffichage_5j +15, id(Emo_mdi36), TextAlign::TOP_CENTER, "%s", weather_icon_map[id(Meteo_jour_3).state].c_str());
              it.printf((it.get_width() / 6)*4 + 27, HauteurAffichage_5j +50, id(bold22), TextAlign::TOP_CENTER, "%s", weather_traduction[id(Meteo_jour_3).state].c_str());
              it.printf((it.get_width() / 6)*4 + 27, HauteurAffichage_5j +72, id(bold22), TextAlign::TOP_CENTER, "%2.1f°C", id(TempMax_jour_3).state);
              it.printf((it.get_width() / 6)*4 + 27, HauteurAffichage_5j +93, id(arial22), TextAlign::TOP_CENTER, "%2.1f°C", id(TempMin_jour_3).state);  

              it.printf((it.get_width() / 6)*5 + 55, HauteurAffichage_5j, id(bold22),  TextAlign::TOP_CENTER, "%s", id(titre_jour_4).state.c_str());
              it.printf((it.get_width() / 6)*5 + 55, HauteurAffichage_5j +15, id(Emo_mdi36), TextAlign::TOP_CENTER, "%s", weather_icon_map[id(Meteo_jour_4).state].c_str());
              it.printf((it.get_width() / 6)*5 + 55, HauteurAffichage_5j +50, id(bold22), TextAlign::TOP_CENTER, "%s", weather_traduction[id(Meteo_jour_4).state].c_str());
              it.printf((it.get_width() / 6)*5 + 55, HauteurAffichage_5j +72, id(bold22), TextAlign::TOP_CENTER, "%2.1f°C", id(TempMax_jour_4).state);
              it.printf((it.get_width() / 6)*5 + 55, HauteurAffichage_5j +93, id(arial22), TextAlign::TOP_CENTER, "%2.1f°C", id(TempMin_jour_4).state);  

      #************************************************
      #***** Page à afficher si API non connectée *****       
      #************************************************
      - id: page2
        lambda: |
              it.printf(it.get_width()/2, it.get_height()/2-120, id(bold35), color_b, TextAlign::TOP_CENTER,"API MétéoFrance" );
              it.printf(it.get_width()/2, it.get_height()/2-85, id(bold35), TextAlign::TOP_CENTER,"non connectée !" );
              it.printf(it.get_width()/2, it.get_height()/2-20, id(mdi100), TextAlign::TOP_CENTER, "%s","\U000F0319" );
      
      #**************************
      #***** Page sans rien *****       
      #**************************
      - id: page3
        lambda: |
        

#************************************************
#***** Timer pour vérifier si API connectée *****       
#************************************************
interval:
  - interval: 5s
    then:
      if:
        condition:
          #wifi.connected:
          api.connected:
        then:
          if:
            condition:
              switch.is_off: SW_ESP32_Epaper_Led_API_Connected_5s
            then:
              if:
                condition:
                  #Astuce pour vérifier la connection !
                  #lambda: 'return(!isnan(id(TempMin_jour_4).state));' => Fonctionne mais ce n'est pas la derniere valeur renseignée !
                  lambda: 'return id(Meteo_jour_4).state != "";'
                then:
                #- logger.log: "xxxWiFi is connected!xxx"
                - switch.turn_on: SW_ESP32_Epaper_Led_API_Connected_5s
                - display.page.show: page1
                - script.execute: update_screen
        else:
          if:
            condition:
              switch.is_on: SW_ESP32_Epaper_Led_API_Connected_5s
            then:
            #- logger.log: "xxxWiFi is disconnected!xxx"
            - switch.turn_off: SW_ESP32_Epaper_Led_API_Connected_5s
            - display.page.show: page2
            - script.execute: update_screen
